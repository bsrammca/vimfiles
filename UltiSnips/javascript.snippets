#
# Import
#

snippet ins "inspect" b
require('util').inspect(${1:...}, { depth: null })$0
endsnippet

snippet cin "console.log inspect" b
console.log(
	'=> $1:',
	require('util').inspect(${1:...}, { depth: null, colors: true })
)$0
endsnippet

snippet i "import ··· from '···'" b
import ${2:${1/^.*\///}} from '${1:···}'$0
endsnippet

snippet i* "import * as ···" b
import * as ${2:${1/^.*\///}} from '${1:···}'$0
endsnippet

snippet r "const ··· = require('···')" b
const ${2:${1/^.*\///}} = require('${1:···}')$0
endsnippet

snippet it "import type { ··· } from '···'" b
import type { $1 } from '$2'$0
endsnippet

#
# @flow
#

snippet flow "@flow"
/* @flow */

/*::
  $0
*/
endsnippet

snippet :: "flow /*:: ... */"
/*::
  $0
*/
endsnippet

#
# Meow
#

snippet meow "meow.js (es6+)" b
#!/usr/bin/env node
const Meow = require('meow')

function cli() {
	return Meow(
		\`
		Usage: 
			$ ${process.argv[1]} [options]

		Options:
			-h, --help        show usage information
			-v, --version     print version info and exit
	\`,
		{
			flags: {
				help: { type: 'boolean', alias: 'h' },
				version: { type: 'boolean', alias: 'v' },
				force: { type: 'boolean', alias: 'f' }
			}
		}
	)
}

function run() {
	const { flags, input } = cli()
	console.log(flags, input)
}

// module.exports = run()
run()
endsnippet


snippet spawn "Node.js spawn"
const ${2:proc} = spawn(${1:'ls', ['-lh', '/usr']})

$2.stdout.on('data', (data) => {
  console.log(`stdout: ${data}`)
})

$2.stderr.on('data', (data) => {
  console.log(`stderr: ${data}`)
})

$2.on('close', (code) => {
  if (code !== 0) {
    console.log(`ps process exited with code ${code}`)
  }
})
endsnippet

snippet cins "inspect" b
console.log("$1", require('util').inspect(${1:...}, { depth: null }))$0
endsnippet
